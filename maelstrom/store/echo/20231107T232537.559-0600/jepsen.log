2023-11-07 23:25:37,575{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w echo --bin /home/wyatt/dist-sys/target/debug/main --node-count 1 --time-limit 10
2023-11-07 23:25:37,620{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 1
 :availability nil
 :max-txn-length 4
 :concurrency 1
 :db
 #object[maelstrom.db$db$reify__16142
         "0x11736ebc"
         "maelstrom.db$db$reify__16142@11736ebc"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "echo"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x50a1c2f3" "2023-11-07T23:25:37.559-06:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x453ca7f"
         "maelstrom.net$jepsen_net$reify__15251@453ca7f"]
 :client
 #object[maelstrom.workload.echo$client$reify__16863
         "0x5d41b929"
         "maelstrom.workload.echo$client$reify__16863@5d41b929"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x6dd0e2f4"
         "java.util.concurrent.CyclicBarrier@6dd0e2f4"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x333813e7"
         "jepsen.checker$compose$reify__11881@333813e7"]
 :argv
 ("test"
  "-w"
  "echo"
  "--bin"
  "/home/wyatt/dist-sys/target/debug/main"
  "--node-count"
  "1"
  "--time-limit"
  "10")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@292237cd"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@797a5b31"]})
 :nodes ["n0"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "/home/wyatt/dist-sys/target/debug/main"
 :generator
 (jepsen.generator.TimeLimit
  {:limit 10000000000,
   :cutoff nil,
   :gen (jepsen.generator.Any
         {:gens [(jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0xd7645b2"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@d7645b2"],
                   :gen nil})
                 (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x72e4905c"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@72e4905c"],
                   :gen (jepsen.generator.Stagger
                         {:dt 400000000,
                          :next-time nil,
                          :gen (jepsen.generator.EachThread
                                {:fresh-gen #object[maelstrom.workload.echo$workload$fn__16882
                                                    "0x279b83ea"
                                                    "maelstrom.workload.echo$workload$fn__16882@279b83ea"],
                                 :context-filters #object[clojure.core$promise$reify__8591
                                                          "0x7f9083b4"
                                                          {:status :pending,
                                                           :val nil}],
                                 :gens {}})})})]})})
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x40f40221"
         "maelstrom.net$jepsen_os$reify__15254@40f40221"]
 :time-limit 10
 :workload :echo
 :consistency-models [:strict-serializable]
 :topology :grid}

2023-11-07 23:25:38,872{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2023-11-07 23:25:38,873{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2023-11-07 23:25:38,874{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2023-11-07 23:25:38,876{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2023-11-07 23:25:38,877{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2023-11-07 23:25:38,877{GMT}	INFO	[jepsen node n0] maelstrom.process: launching /home/wyatt/dist-sys/target/debug/main []
2023-11-07 23:25:38,892{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2023-11-07 23:25:38,902{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 70"
2023-11-07 23:25:38,918{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 0 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 70", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 1,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 70"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:38,998{GMT}	INFO	[jepsen worker 0] jepsen.util: 1	:invoke	:echo	"Please echo 44"
2023-11-07 23:25:39,006{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 1 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 44", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 2,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 44"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:39,272{GMT}	INFO	[jepsen worker 0] jepsen.util: 2	:invoke	:echo	"Please echo 72"
2023-11-07 23:25:39,279{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 2 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 72", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 3,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 72"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:39,537{GMT}	INFO	[jepsen worker 0] jepsen.util: 3	:invoke	:echo	"Please echo 4"
2023-11-07 23:25:39,544{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 3 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 4", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 4,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 4"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:39,583{GMT}	INFO	[jepsen worker 0] jepsen.util: 4	:invoke	:echo	"Please echo 16"
2023-11-07 23:25:39,590{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 4 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 16", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 5,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 16"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:39,691{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:invoke	:echo	"Please echo 45"
2023-11-07 23:25:39,697{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 5 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 45", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 6,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 45"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:39,737{GMT}	INFO	[jepsen worker 0] jepsen.util: 6	:invoke	:echo	"Please echo 28"
2023-11-07 23:25:39,743{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 6 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 28", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 7,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 28"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:39,754{GMT}	INFO	[jepsen worker 0] jepsen.util: 7	:invoke	:echo	"Please echo 45"
2023-11-07 23:25:39,759{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 7 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 45", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 8,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 45"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:40,137{GMT}	INFO	[jepsen worker 0] jepsen.util: 8	:invoke	:echo	"Please echo 121"
2023-11-07 23:25:40,143{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 8 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 121", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 9,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 121"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:40,499{GMT}	INFO	[jepsen worker 0] jepsen.util: 9	:invoke	:echo	"Please echo 67"
2023-11-07 23:25:40,504{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 9 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 67", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 10,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 67"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:40,884{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:echo	"Please echo 61"
2023-11-07 23:25:40,889{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 10 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 61", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 11,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 61"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:41,116{GMT}	INFO	[jepsen worker 0] jepsen.util: 11	:invoke	:echo	"Please echo 29"
2023-11-07 23:25:41,121{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 11 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 29", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 12,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 29"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:41,191{GMT}	INFO	[jepsen worker 0] jepsen.util: 12	:invoke	:echo	"Please echo 22"
2023-11-07 23:25:41,196{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 12 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 22", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 13,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 22"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:41,351{GMT}	INFO	[jepsen worker 0] jepsen.util: 13	:invoke	:echo	"Please echo 2"
2023-11-07 23:25:41,355{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 13 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 2", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 14,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 2"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:41,539{GMT}	INFO	[jepsen worker 0] jepsen.util: 14	:invoke	:echo	"Please echo 37"
2023-11-07 23:25:41,543{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 14 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 37", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 15,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 37"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:41,616{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:invoke	:echo	"Please echo 118"
2023-11-07 23:25:41,620{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 15 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 118", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 16,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 118"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:41,764{GMT}	INFO	[jepsen worker 0] jepsen.util: 16	:invoke	:echo	"Please echo 48"
2023-11-07 23:25:41,769{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 16 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 48", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 17,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 48"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:42,129{GMT}	INFO	[jepsen worker 0] jepsen.util: 17	:invoke	:echo	"Please echo 115"
2023-11-07 23:25:42,133{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 17 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 115", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 18,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 115"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:42,370{GMT}	INFO	[jepsen worker 0] jepsen.util: 18	:invoke	:echo	"Please echo 88"
2023-11-07 23:25:42,374{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 18 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 88", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 19,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 88"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:42,536{GMT}	INFO	[jepsen worker 0] jepsen.util: 19	:invoke	:echo	"Please echo 116"
2023-11-07 23:25:42,540{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 19 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 116", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 20,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 116"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:42,634{GMT}	INFO	[jepsen worker 0] jepsen.util: 20	:invoke	:echo	"Please echo 58"
2023-11-07 23:25:42,638{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 20 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 58", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 21,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 58"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:42,886{GMT}	INFO	[jepsen worker 0] jepsen.util: 21	:invoke	:echo	"Please echo 124"
2023-11-07 23:25:42,891{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 21 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 124", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 22,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 124"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:42,956{GMT}	INFO	[jepsen worker 0] jepsen.util: 22	:invoke	:echo	"Please echo 54"
2023-11-07 23:25:42,960{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 22 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 54", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 23,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 54"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:43,079{GMT}	INFO	[jepsen worker 0] jepsen.util: 23	:invoke	:echo	"Please echo 82"
2023-11-07 23:25:43,083{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 23 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 82", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 24,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 82"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:43,118{GMT}	INFO	[jepsen worker 0] jepsen.util: 24	:invoke	:echo	"Please echo 77"
2023-11-07 23:25:43,122{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 24 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 77", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 25,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 77"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:43,290{GMT}	INFO	[jepsen worker 0] jepsen.util: 25	:invoke	:echo	"Please echo 102"
2023-11-07 23:25:43,294{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 25 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 102", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 26,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 102"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:43,664{GMT}	INFO	[jepsen worker 0] jepsen.util: 26	:invoke	:echo	"Please echo 34"
2023-11-07 23:25:43,667{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 26 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 34", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 27,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 34"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:43,915{GMT}	INFO	[jepsen worker 0] jepsen.util: 27	:invoke	:echo	"Please echo 41"
2023-11-07 23:25:43,920{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 27 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 41", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 28,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 41"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:44,040{GMT}	INFO	[jepsen worker 0] jepsen.util: 28	:invoke	:echo	"Please echo 61"
2023-11-07 23:25:44,045{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 28 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 61", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 29,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 61"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:44,052{GMT}	INFO	[jepsen worker 0] jepsen.util: 29	:invoke	:echo	"Please echo 89"
2023-11-07 23:25:44,056{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 29 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 89", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 30,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 89"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:44,300{GMT}	INFO	[jepsen worker 0] jepsen.util: 30	:invoke	:echo	"Please echo 28"
2023-11-07 23:25:44,304{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 30 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 28", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 31,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 28"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:44,403{GMT}	INFO	[jepsen worker 0] jepsen.util: 31	:invoke	:echo	"Please echo 72"
2023-11-07 23:25:44,408{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 31 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 72", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 32,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 72"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:44,484{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:invoke	:echo	"Please echo 14"
2023-11-07 23:25:44,488{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 32 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 14", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 33,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 14"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:44,801{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:invoke	:echo	"Please echo 84"
2023-11-07 23:25:44,805{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 33 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 84", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 34,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 84"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:44,859{GMT}	INFO	[jepsen worker 0] jepsen.util: 34	:invoke	:echo	"Please echo 32"
2023-11-07 23:25:44,863{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 34 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 32", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 35,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 32"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:44,948{GMT}	INFO	[jepsen worker 0] jepsen.util: 35	:invoke	:echo	"Please echo 21"
2023-11-07 23:25:44,953{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 35 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 21", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 36,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 21"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:45,129{GMT}	INFO	[jepsen worker 0] jepsen.util: 36	:invoke	:echo	"Please echo 21"
2023-11-07 23:25:45,132{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 36 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 21", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 37,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 21"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:45,374{GMT}	INFO	[jepsen worker 0] jepsen.util: 37	:invoke	:echo	"Please echo 69"
2023-11-07 23:25:45,377{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 37 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 69", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 38,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 69"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:45,554{GMT}	INFO	[jepsen worker 0] jepsen.util: 38	:invoke	:echo	"Please echo 41"
2023-11-07 23:25:45,558{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 38 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 41", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 39,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 41"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:45,892{GMT}	INFO	[jepsen worker 0] jepsen.util: 39	:invoke	:echo	"Please echo 42"
2023-11-07 23:25:45,896{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 39 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 42", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 40,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 42"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:46,215{GMT}	INFO	[jepsen worker 0] jepsen.util: 40	:invoke	:echo	"Please echo 67"
2023-11-07 23:25:46,219{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 40 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 67", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 41,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 67"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:46,419{GMT}	INFO	[jepsen worker 0] jepsen.util: 41	:invoke	:echo	"Please echo 123"
2023-11-07 23:25:46,423{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 41 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 123", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 42,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 123"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:46,719{GMT}	INFO	[jepsen worker 0] jepsen.util: 42	:invoke	:echo	"Please echo 113"
2023-11-07 23:25:46,723{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 42 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 113", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 43,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 113"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:47,042{GMT}	INFO	[jepsen worker 0] jepsen.util: 43	:invoke	:echo	"Please echo 119"
2023-11-07 23:25:47,046{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 43 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 119", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 44,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 119"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:47,384{GMT}	INFO	[jepsen worker 0] jepsen.util: 44	:invoke	:echo	"Please echo 62"
2023-11-07 23:25:47,388{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 44 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 62", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 45,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 62"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:47,748{GMT}	INFO	[jepsen worker 0] jepsen.util: 45	:invoke	:echo	"Please echo 89"
2023-11-07 23:25:47,751{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 45 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 89", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 46,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 89"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:47,795{GMT}	INFO	[jepsen worker 0] jepsen.util: 46	:invoke	:echo	"Please echo 4"
2023-11-07 23:25:47,798{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 46 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 4", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 47,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 4"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:47,856{GMT}	INFO	[jepsen worker 0] jepsen.util: 47	:invoke	:echo	"Please echo 105"
2023-11-07 23:25:47,859{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 47 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 105", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 48,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 105"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:48,253{GMT}	INFO	[jepsen worker 0] jepsen.util: 48	:invoke	:echo	"Please echo 104"
2023-11-07 23:25:48,257{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 48 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 104", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 49,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 104"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:48,542{GMT}	INFO	[jepsen worker 0] jepsen.util: 49	:invoke	:echo	"Please echo 80"
2023-11-07 23:25:48,545{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 49 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 80", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 50,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 80"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:48,811{GMT}	INFO	[jepsen worker 0] jepsen.util: 50	:invoke	:echo	"Please echo 4"
2023-11-07 23:25:48,815{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 50 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 4", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 51,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 4"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$fn__16852$echo_BANG___16853.invoke(echo.clj:15)
	at maelstrom.workload.echo$client$reify__16863.invoke_BANG_(echo.clj:36)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-07 23:25:48,825{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2023-11-07 23:25:48,880{GMT}	INFO	[jepsen node n0] maelstrom.db: Tearing down n0
2023-11-07 23:25:49,880{GMT}	INFO	[jepsen node n0] maelstrom.net: Shutting down Maelstrom network
2023-11-07 23:25:49,880{GMT}	INFO	[jepsen test runner] jepsen.core: Analyzing...
2023-11-07 23:25:49,986{GMT}	INFO	[jepsen test runner] jepsen.core: Analysis complete
2023-11-07 23:25:50,002{GMT}	INFO	[jepsen results] jepsen.store: Wrote /home/wyatt/dist-sys/maelstrom/store/echo/20231107T232537.559-0600/results.edn
2023-11-07 23:25:50,016{GMT}	INFO	[jepsen test runner] jepsen.core: {:perf {:latency-graph {:valid? true},
        :rate-graph {:valid? true},
        :valid? true},
 :timeline {:valid? true},
 :exceptions {:valid? true,
              :exceptions ({:count 51,
                            :class clojure.lang.ExceptionInfo,
                            :example #jepsen.history.Op{:index 1,
                                                        :time 29403598,
                                                        :type :info,
                                                        :process 0,
                                                        :f :echo,
                                                        :value "Please echo 70",
                                                        :exception {:via [{:type clojure.lang.ExceptionInfo,
                                                                           :message "Malformed RPC response. Maelstrom sent node n0 the following request:\n\n{:echo \"Please echo 70\", :type \"echo\", :msg_id 1}\n\nAnd expected a response of the form:\n\n{:type (eq \"echo_ok\"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}\n\n... but instead received\n\n{:msg_id 1,\n :in_reply_to 1,\n :type {\"type\" \"echo_ok\"},\n :echo \"Please echo 70\"}\n\nThis is malformed because:\n\n{:type (not (= \"echo_ok\" {\"type\" \"echo_ok\"}))}\n\nSee doc/protocol.md for more guidance.",
                                                                           :data {:type :malformed-rpc-response,
                                                                                  :body {:msg_id 1,
                                                                                         :in_reply_to 1,
                                                                                         :type {"type" "echo_ok"},
                                                                                         :echo "Please echo 70"}},
                                                                           :at [slingshot.support$stack_trace
                                                                                invoke
                                                                                "support.clj"
                                                                                201]}],
                                                                    :trace [[slingshot.support$stack_trace
                                                                             invoke
                                                                             "support.clj"
                                                                             201]
                                                                            [maelstrom.client$check_body
                                                                             invokeStatic
                                                                             "client.clj"
                                                                             188]
                                                                            [maelstrom.client$check_body
                                                                             invoke
                                                                             "client.clj"
                                                                             181]
                                                                            [maelstrom.workload.echo$fn__16852$echo_BANG___16853
                                                                             invoke
                                                                             "echo.clj"
                                                                             15]
                                                                            [maelstrom.workload.echo$fn__16852$echo_BANG___16853
                                                                             invoke
                                                                             "echo.clj"
                                                                             15]
                                                                            [maelstrom.workload.echo$client$reify__16863
                                                                             invoke_BANG_
                                                                             "echo.clj"
                                                                             36]
                                                                            [jepsen.client.Validate
                                                                             invoke_BANG_
                                                                             "client.clj"
                                                                             83]
                                                                            [jepsen.generator.interpreter.ClientWorker
                                                                             invoke_BANG_
                                                                             "interpreter.clj"
                                                                             65]
                                                                            [jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909
                                                                             invoke
                                                                             "interpreter.clj"
                                                                             140]
                                                                            [jepsen.generator.interpreter$spawn_worker$fn__12908
                                                                             invoke
                                                                             "interpreter.clj"
                                                                             123]
                                                                            [clojure.core$binding_conveyor_fn$fn__5823
                                                                             invoke
                                                                             "core.clj"
                                                                             2047]
                                                                            [clojure.lang.AFn
                                                                             call
                                                                             "AFn.java"
                                                                             18]
                                                                            [java.util.concurrent.FutureTask
                                                                             run
                                                                             "FutureTask.java"
                                                                             264]
                                                                            [java.util.concurrent.ThreadPoolExecutor
                                                                             runWorker
                                                                             "ThreadPoolExecutor.java"
                                                                             1136]
                                                                            [java.util.concurrent.ThreadPoolExecutor$Worker
                                                                             run
                                                                             "ThreadPoolExecutor.java"
                                                                             635]
                                                                            [java.lang.Thread
                                                                             run
                                                                             "Thread.java"
                                                                             833]],
                                                                    :cause "Malformed RPC response. Maelstrom sent node n0 the following request:\n\n{:echo \"Please echo 70\", :type \"echo\", :msg_id 1}\n\nAnd expected a response of the form:\n\n{:type (eq \"echo_ok\"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}\n\n... but instead received\n\n{:msg_id 1,\n :in_reply_to 1,\n :type {\"type\" \"echo_ok\"},\n :echo \"Please echo 70\"}\n\nThis is malformed because:\n\n{:type (not (= \"echo_ok\" {\"type\" \"echo_ok\"}))}\n\nSee doc/protocol.md for more guidance.",
                                                                    :data {:type :malformed-rpc-response,
                                                                           :body {:msg_id 1,
                                                                                  :in_reply_to 1,
                                                                                  :type {"type" "echo_ok"},
                                                                                  :echo "Please echo 70"}}},
                                                        :error "indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:\n\n{:echo \"Please echo 70\", :type \"echo\", :msg_id 1}\n\nAnd expected a response of the form:\n\n{:type (eq \"echo_ok\"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}\n\n... but instead received\n\n{:msg_id 1,\n :in_reply_to 1,\n :type {\"type\" \"echo_ok\"},\n :echo \"Please echo 70\"}\n\nThis is malformed because:\n\n{:type (not (= \"echo_ok\" {\"type\" \"echo_ok\"}))}\n\nSee doc/protocol.md for more guidance."}})},
 :stats {:valid? false,
         :count 51,
         :ok-count 0,
         :fail-count 0,
         :info-count 51,
         :by-f {:echo {:valid? false,
                       :count 51,
                       :ok-count 0,
                       :fail-count 0,
                       :info-count 51}}},
 :availability {:valid? true, :ok-fraction 0.0},
 :net {:all {:send-count 104,
             :recv-count 104,
             :msg-count 104,
             :msgs-per-op 2.0392158},
       :clients {:send-count 104, :recv-count 104, :msg-count 104},
       :servers {:send-count 0,
                 :recv-count 0,
                 :msg-count 0,
                 :msgs-per-op 0.0},
       :valid? true},
 :workload {:valid? true, :errors ()},
 :valid? false}


Analysis invalid! (ﾉಥ益ಥ）ﾉ ┻━┻
