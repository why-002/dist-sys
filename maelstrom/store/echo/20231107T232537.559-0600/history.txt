0	:invoke	:echo	"Please echo 70"
0	:info	:echo	"Please echo 70"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 70", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 1,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 70"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
1	:invoke	:echo	"Please echo 44"
1	:info	:echo	"Please echo 44"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 44", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 2,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 44"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
2	:invoke	:echo	"Please echo 72"
2	:info	:echo	"Please echo 72"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 72", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 3,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 72"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
3	:invoke	:echo	"Please echo 4"
3	:info	:echo	"Please echo 4"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 4", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 4,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 4"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
4	:invoke	:echo	"Please echo 16"
4	:info	:echo	"Please echo 16"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 16", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 5,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 16"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
5	:invoke	:echo	"Please echo 45"
5	:info	:echo	"Please echo 45"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 45", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 6,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 45"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
6	:invoke	:echo	"Please echo 28"
6	:info	:echo	"Please echo 28"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 28", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 7,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 28"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
7	:invoke	:echo	"Please echo 45"
7	:info	:echo	"Please echo 45"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 45", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 8,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 45"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
8	:invoke	:echo	"Please echo 121"
8	:info	:echo	"Please echo 121"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 121", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 9,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 121"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
9	:invoke	:echo	"Please echo 67"
9	:info	:echo	"Please echo 67"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 67", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 10,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 67"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
10	:invoke	:echo	"Please echo 61"
10	:info	:echo	"Please echo 61"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 61", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 11,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 61"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
11	:invoke	:echo	"Please echo 29"
11	:info	:echo	"Please echo 29"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 29", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 12,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 29"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
12	:invoke	:echo	"Please echo 22"
12	:info	:echo	"Please echo 22"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 22", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 13,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 22"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
13	:invoke	:echo	"Please echo 2"
13	:info	:echo	"Please echo 2"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 2", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 14,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 2"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
14	:invoke	:echo	"Please echo 37"
14	:info	:echo	"Please echo 37"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 37", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 15,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 37"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
15	:invoke	:echo	"Please echo 118"
15	:info	:echo	"Please echo 118"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 118", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 16,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 118"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
16	:invoke	:echo	"Please echo 48"
16	:info	:echo	"Please echo 48"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 48", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 17,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 48"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
17	:invoke	:echo	"Please echo 115"
17	:info	:echo	"Please echo 115"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 115", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 18,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 115"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
18	:invoke	:echo	"Please echo 88"
18	:info	:echo	"Please echo 88"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 88", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 19,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 88"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
19	:invoke	:echo	"Please echo 116"
19	:info	:echo	"Please echo 116"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 116", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 20,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 116"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
20	:invoke	:echo	"Please echo 58"
20	:info	:echo	"Please echo 58"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 58", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 21,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 58"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
21	:invoke	:echo	"Please echo 124"
21	:info	:echo	"Please echo 124"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 124", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 22,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 124"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
22	:invoke	:echo	"Please echo 54"
22	:info	:echo	"Please echo 54"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 54", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 23,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 54"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
23	:invoke	:echo	"Please echo 82"
23	:info	:echo	"Please echo 82"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 82", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 24,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 82"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
24	:invoke	:echo	"Please echo 77"
24	:info	:echo	"Please echo 77"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 77", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 25,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 77"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
25	:invoke	:echo	"Please echo 102"
25	:info	:echo	"Please echo 102"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 102", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 26,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 102"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
26	:invoke	:echo	"Please echo 34"
26	:info	:echo	"Please echo 34"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 34", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 27,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 34"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
27	:invoke	:echo	"Please echo 41"
27	:info	:echo	"Please echo 41"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 41", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 28,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 41"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
28	:invoke	:echo	"Please echo 61"
28	:info	:echo	"Please echo 61"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 61", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 29,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 61"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
29	:invoke	:echo	"Please echo 89"
29	:info	:echo	"Please echo 89"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 89", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 30,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 89"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
30	:invoke	:echo	"Please echo 28"
30	:info	:echo	"Please echo 28"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 28", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 31,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 28"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
31	:invoke	:echo	"Please echo 72"
31	:info	:echo	"Please echo 72"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 72", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 32,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 72"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
32	:invoke	:echo	"Please echo 14"
32	:info	:echo	"Please echo 14"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 14", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 33,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 14"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
33	:invoke	:echo	"Please echo 84"
33	:info	:echo	"Please echo 84"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 84", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 34,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 84"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
34	:invoke	:echo	"Please echo 32"
34	:info	:echo	"Please echo 32"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 32", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 35,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 32"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
35	:invoke	:echo	"Please echo 21"
35	:info	:echo	"Please echo 21"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 21", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 36,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 21"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
36	:invoke	:echo	"Please echo 21"
36	:info	:echo	"Please echo 21"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 21", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 37,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 21"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
37	:invoke	:echo	"Please echo 69"
37	:info	:echo	"Please echo 69"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 69", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 38,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 69"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
38	:invoke	:echo	"Please echo 41"
38	:info	:echo	"Please echo 41"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 41", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 39,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 41"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
39	:invoke	:echo	"Please echo 42"
39	:info	:echo	"Please echo 42"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 42", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 40,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 42"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
40	:invoke	:echo	"Please echo 67"
40	:info	:echo	"Please echo 67"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 67", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 41,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 67"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
41	:invoke	:echo	"Please echo 123"
41	:info	:echo	"Please echo 123"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 123", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 42,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 123"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
42	:invoke	:echo	"Please echo 113"
42	:info	:echo	"Please echo 113"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 113", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 43,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 113"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
43	:invoke	:echo	"Please echo 119"
43	:info	:echo	"Please echo 119"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 119", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 44,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 119"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
44	:invoke	:echo	"Please echo 62"
44	:info	:echo	"Please echo 62"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 62", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 45,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 62"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
45	:invoke	:echo	"Please echo 89"
45	:info	:echo	"Please echo 89"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 89", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 46,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 89"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
46	:invoke	:echo	"Please echo 4"
46	:info	:echo	"Please echo 4"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 4", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 47,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 4"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
47	:invoke	:echo	"Please echo 105"
47	:info	:echo	"Please echo 105"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 105", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 48,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 105"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
48	:invoke	:echo	"Please echo 104"
48	:info	:echo	"Please echo 104"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 104", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 49,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 104"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
49	:invoke	:echo	"Please echo 80"
49	:info	:echo	"Please echo 80"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 80", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 50,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 80"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
50	:invoke	:echo	"Please echo 4"
50	:info	:echo	"Please echo 4"	indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:

{:echo "Please echo 4", :type "echo", :msg_id 1}

And expected a response of the form:

{:type (eq "echo_ok"), :echo Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:msg_id 51,
 :in_reply_to 1,
 :type {"type" "echo_ok"},
 :echo "Please echo 4"}

This is malformed because:

{:type (not (= "echo_ok" {"type" "echo_ok"}))}

See doc/protocol.md for more guidance.
